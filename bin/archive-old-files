#!/usr/bin/env python3
# -*- mode: python -*-

import logging
from argparse import ArgumentParser
from datetime import datetime, timedelta
from pathlib import Path

logger = logging.getLogger(__name__)

parser = ArgumentParser()
parser.add_argument('target', help='Target Directory', type=Path)
parser.add_argument('archived', help='Archive Directory', type=Path)
parser.add_argument('age_days', help='age days for archive', type=int)
parser.add_argument('--delete', help='Delete instead of archive', action='store_true')
parser.add_argument('--dry-run', help='dre run', action='store_true')
args = parser.parse_args()

target: Path = args.target.expanduser()
if not target.is_dir():
    raise ValueError(f'{target} must be direcotry.')
archived: Path = args.archived.expanduser()
archived.mkdir(exist_ok=True)

logging.basicConfig(level=logging.INFO)


def main(target, archived, age_days, dry_run, delete):
    for p in target.expanduser().iterdir():
        dt = datetime.fromtimestamp(p.stat().st_mtime)
        if datetime.now() - timedelta(days=age_days) > dt:
            logger.info(p)
            if not dry_run:
                if delete:
                    p.unlink()
                else:
                    p.rename(archived / p.name)


main(target, archived, args.age_days, args.dry_run, args.delete)
